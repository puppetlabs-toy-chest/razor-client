---
http_interactions:
- request:
    method: get
    uri: http://localhost:8080/api
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '4982'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"commands":[{"name":"add-policy-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/add-policy-tag","id":"http://localhost:8080/api/commands/add-policy-tag"},{"name":"create-broker","rel":"http://api.puppetlabs.com/razor/v1/commands/create-broker","id":"http://localhost:8080/api/commands/create-broker"},{"name":"create-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/create-policy","id":"http://localhost:8080/api/commands/create-policy"},{"name":"create-repo","rel":"http://api.puppetlabs.com/razor/v1/commands/create-repo","id":"http://localhost:8080/api/commands/create-repo"},{"name":"create-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/create-tag","id":"http://localhost:8080/api/commands/create-tag"},{"name":"create-task","rel":"http://api.puppetlabs.com/razor/v1/commands/create-task","id":"http://localhost:8080/api/commands/create-task"},{"name":"delete-broker","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-broker","id":"http://localhost:8080/api/commands/delete-broker"},{"name":"delete-node","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-node","id":"http://localhost:8080/api/commands/delete-node"},{"name":"delete-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-policy","id":"http://localhost:8080/api/commands/delete-policy"},{"name":"delete-repo","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-repo","id":"http://localhost:8080/api/commands/delete-repo"},{"name":"delete-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-tag","id":"http://localhost:8080/api/commands/delete-tag"},{"name":"disable-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/disable-policy","id":"http://localhost:8080/api/commands/disable-policy"},{"name":"enable-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/enable-policy","id":"http://localhost:8080/api/commands/enable-policy"},{"name":"modify-node-metadata","rel":"http://api.puppetlabs.com/razor/v1/commands/modify-node-metadata","id":"http://localhost:8080/api/commands/modify-node-metadata"},{"name":"modify-policy-max-count","rel":"http://api.puppetlabs.com/razor/v1/commands/modify-policy-max-count","id":"http://localhost:8080/api/commands/modify-policy-max-count"},{"name":"move-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/move-policy","id":"http://localhost:8080/api/commands/move-policy"},{"name":"reboot-node","rel":"http://api.puppetlabs.com/razor/v1/commands/reboot-node","id":"http://localhost:8080/api/commands/reboot-node"},{"name":"register-node","rel":"http://api.puppetlabs.com/razor/v1/commands/register-node","id":"http://localhost:8080/api/commands/register-node"},{"name":"reinstall-node","rel":"http://api.puppetlabs.com/razor/v1/commands/reinstall-node","id":"http://localhost:8080/api/commands/reinstall-node"},{"name":"remove-node-metadata","rel":"http://api.puppetlabs.com/razor/v1/commands/remove-node-metadata","id":"http://localhost:8080/api/commands/remove-node-metadata"},{"name":"remove-policy-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/remove-policy-tag","id":"http://localhost:8080/api/commands/remove-policy-tag"},{"name":"set-node-desired-power-state","rel":"http://api.puppetlabs.com/razor/v1/commands/set-node-desired-power-state","id":"http://localhost:8080/api/commands/set-node-desired-power-state"},{"name":"set-node-hw-info","rel":"http://api.puppetlabs.com/razor/v1/commands/set-node-hw-info","id":"http://localhost:8080/api/commands/set-node-hw-info"},{"name":"set-node-ipmi-credentials","rel":"http://api.puppetlabs.com/razor/v1/commands/set-node-ipmi-credentials","id":"http://localhost:8080/api/commands/set-node-ipmi-credentials"},{"name":"update-node-metadata","rel":"http://api.puppetlabs.com/razor/v1/commands/update-node-metadata","id":"http://localhost:8080/api/commands/update-node-metadata"},{"name":"update-tag-rule","rel":"http://api.puppetlabs.com/razor/v1/commands/update-tag-rule","id":"http://localhost:8080/api/commands/update-tag-rule"}],"collections":[{"name":"brokers","rel":"http://api.puppetlabs.com/razor/v1/collections/brokers","id":"http://localhost:8080/api/collections/brokers"},{"name":"repos","rel":"http://api.puppetlabs.com/razor/v1/collections/repos","id":"http://localhost:8080/api/collections/repos"},{"name":"tags","rel":"http://api.puppetlabs.com/razor/v1/collections/tags","id":"http://localhost:8080/api/collections/tags"},{"name":"policies","rel":"http://api.puppetlabs.com/razor/v1/collections/policies","id":"http://localhost:8080/api/collections/policies"},{"name":"nodes","rel":"http://api.puppetlabs.com/razor/v1/collections/nodes","id":"http://localhost:8080/api/collections/nodes"},{"name":"tasks","rel":"http://api.puppetlabs.com/razor/v1/collections/tasks","id":"http://localhost:8080/api/collections/tasks"},{"name":"commands","rel":"http://api.puppetlabs.com/razor/v1/collections/commands","id":"http://localhost:8080/api/collections/commands"}],"version":{"server":"v0.14.1-125-g591a14d-dirty"}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: get
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.14.1-125-g591a14d-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '3227'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-repo","help":{"full":"# SYNOPSIS\nCreate a new repository,
        from an ISO image or a URL\n\n# DESCRIPTION\nCreate a new repository, which
        can either contain the content to install a\nnode, or simply point to an existing
        online repository by URL.\n\n\n# Access Control\n\nThis command''s access
        control pattern: `commands:create-repo:%{name}`\n\nWords surrounded by `%{...}`
        are substitutions from the input data: typically\nthe name of the object being
        modified, or some other critical detail, these\nallow roles to be granted
        partial access to modify the system.\n\nFor more detail on how the permission
        strings are structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        http://shiro.apache.org/permissions.html\n\n# Attributes\n\n * name\n   -
        The name of the repository.\n   - This attribute is required\n   - It must
        be of type string.\n   - It must be between 1 and 250 in length.\n\n * url\n   -
        The URL of the remote repository to use.\n   - It must be of type string.\n   -
        If present, iso-url must not be present.\n   - It must be between 1 and 1000
        in length.\n\n * iso-url\n   - The URL of the ISO image to download and unpack
        to create the\n   repository.  This can be an HTTP or HTTPS URL, or it can
        be a\n   file URL.\n   \n   In the later case, the file path is interpreted
        as a path on the\n   Razor server, rather than a path on the client.  This
        requires that\n   you manually place the ISO image on the server before invoking
        the\n   command.\n   - It must be of type string.\n   - If present, url must
        not be present.\n   - It must be between 1 and 1000 in length.\n\n * task\n   -
        The name of the task associated with this repository.  This is used to\n   install
        nodes that match a policy using this repository; generally it\n   should match
        the OS that the URL or ISO-URL attributes point to.\n   - This attribute is
        required\n   - It must be of type string.\n\n\n\n# EXAMPLES\n  Create a repository
        from an ISO image, which will be downloaded and unpacked\n  by the razor-server
        in the background:\n  \n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"http://example.com/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  You
        can also unpack an ISO image from a file *on the server*; this does not\n  upload
        the file from the client:\n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"file:///tmp/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  Finally,
        you can providing a `url` property when you create the repository;\n  this
        form is merely a pointer to a resource somehwere and nothing will be\n  downloaded
        onto the Razor server:\n  \n      {\n        \"name\": \"fedora19\",\n        \"url\":  \"http://mirrors.n-ix.net/fedora/linux/releases/19/Fedora/x86_64/os/\"\n        \"task\":
        \"fedora\"\n      }\n\n"},"schema":{"name":{"type":"string"},"url":{"type":"string"},"iso-url":{"type":"string"},"task":{"type":"string"}}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: get
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.14.1-125-g591a14d-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '3227'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-repo","help":{"full":"# SYNOPSIS\nCreate a new repository,
        from an ISO image or a URL\n\n# DESCRIPTION\nCreate a new repository, which
        can either contain the content to install a\nnode, or simply point to an existing
        online repository by URL.\n\n\n# Access Control\n\nThis command''s access
        control pattern: `commands:create-repo:%{name}`\n\nWords surrounded by `%{...}`
        are substitutions from the input data: typically\nthe name of the object being
        modified, or some other critical detail, these\nallow roles to be granted
        partial access to modify the system.\n\nFor more detail on how the permission
        strings are structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        http://shiro.apache.org/permissions.html\n\n# Attributes\n\n * name\n   -
        The name of the repository.\n   - This attribute is required\n   - It must
        be of type string.\n   - It must be between 1 and 250 in length.\n\n * url\n   -
        The URL of the remote repository to use.\n   - It must be of type string.\n   -
        If present, iso-url must not be present.\n   - It must be between 1 and 1000
        in length.\n\n * iso-url\n   - The URL of the ISO image to download and unpack
        to create the\n   repository.  This can be an HTTP or HTTPS URL, or it can
        be a\n   file URL.\n   \n   In the later case, the file path is interpreted
        as a path on the\n   Razor server, rather than a path on the client.  This
        requires that\n   you manually place the ISO image on the server before invoking
        the\n   command.\n   - It must be of type string.\n   - If present, url must
        not be present.\n   - It must be between 1 and 1000 in length.\n\n * task\n   -
        The name of the task associated with this repository.  This is used to\n   install
        nodes that match a policy using this repository; generally it\n   should match
        the OS that the URL or ISO-URL attributes point to.\n   - This attribute is
        required\n   - It must be of type string.\n\n\n\n# EXAMPLES\n  Create a repository
        from an ISO image, which will be downloaded and unpacked\n  by the razor-server
        in the background:\n  \n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"http://example.com/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  You
        can also unpack an ISO image from a file *on the server*; this does not\n  upload
        the file from the client:\n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"file:///tmp/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  Finally,
        you can providing a `url` property when you create the repository;\n  this
        form is merely a pointer to a resource somehwere and nothing will be\n  downloaded
        onto the Razor server:\n  \n      {\n        \"name\": \"fedora19\",\n        \"url\":  \"http://mirrors.n-ix.net/fedora/linux/releases/19/Fedora/x86_64/os/\"\n        \"task\":
        \"fedora\"\n      }\n\n"},"schema":{"name":{"type":"string"},"url":{"type":"string"},"iso-url":{"type":"string"},"task":{"type":"string"}}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: get
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.14.1-125-g591a14d-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '3227'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-repo","help":{"full":"# SYNOPSIS\nCreate a new repository,
        from an ISO image or a URL\n\n# DESCRIPTION\nCreate a new repository, which
        can either contain the content to install a\nnode, or simply point to an existing
        online repository by URL.\n\n\n# Access Control\n\nThis command''s access
        control pattern: `commands:create-repo:%{name}`\n\nWords surrounded by `%{...}`
        are substitutions from the input data: typically\nthe name of the object being
        modified, or some other critical detail, these\nallow roles to be granted
        partial access to modify the system.\n\nFor more detail on how the permission
        strings are structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        http://shiro.apache.org/permissions.html\n\n# Attributes\n\n * name\n   -
        The name of the repository.\n   - This attribute is required\n   - It must
        be of type string.\n   - It must be between 1 and 250 in length.\n\n * url\n   -
        The URL of the remote repository to use.\n   - It must be of type string.\n   -
        If present, iso-url must not be present.\n   - It must be between 1 and 1000
        in length.\n\n * iso-url\n   - The URL of the ISO image to download and unpack
        to create the\n   repository.  This can be an HTTP or HTTPS URL, or it can
        be a\n   file URL.\n   \n   In the later case, the file path is interpreted
        as a path on the\n   Razor server, rather than a path on the client.  This
        requires that\n   you manually place the ISO image on the server before invoking
        the\n   command.\n   - It must be of type string.\n   - If present, url must
        not be present.\n   - It must be between 1 and 1000 in length.\n\n * task\n   -
        The name of the task associated with this repository.  This is used to\n   install
        nodes that match a policy using this repository; generally it\n   should match
        the OS that the URL or ISO-URL attributes point to.\n   - This attribute is
        required\n   - It must be of type string.\n\n\n\n# EXAMPLES\n  Create a repository
        from an ISO image, which will be downloaded and unpacked\n  by the razor-server
        in the background:\n  \n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"http://example.com/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  You
        can also unpack an ISO image from a file *on the server*; this does not\n  upload
        the file from the client:\n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"file:///tmp/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  Finally,
        you can providing a `url` property when you create the repository;\n  this
        form is merely a pointer to a resource somehwere and nothing will be\n  downloaded
        onto the Razor server:\n  \n      {\n        \"name\": \"fedora19\",\n        \"url\":  \"http://mirrors.n-ix.net/fedora/linux/releases/19/Fedora/x86_64/os/\"\n        \"task\":
        \"fedora\"\n      }\n\n"},"schema":{"name":{"type":"string"},"url":{"type":"string"},"iso-url":{"type":"string"},"task":{"type":"string"}}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: post
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: UTF-8
      string: '{"name":"separate with spaces","url":"http://url.com/some.iso","task":"noop"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Content-Type:
      - application/json
      Content-Length:
      - '77'
      User-Agent:
      - Ruby
  response:
    status:
      code: 202
      message: Accepted
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '237'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"spec":"http://api.puppetlabs.com/razor/v1/collections/repos/member","id":"http://localhost:8080/api/collections/repos/separate%20with%20spaces","name":"separate
        with spaces","command":"http://localhost:8080/api/collections/commands/1"}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: get
    uri: http://localhost:8080/api/collections/repos/separate%20with%20spaces
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '371'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"spec":"http://api.puppetlabs.com/razor/v1/collections/repos/member","id":"http://localhost:8080/api/collections/repos/separate%20with%20spaces","name":"separate
        with spaces","iso_url":null,"url":"http://url.com/some.iso","task":{"spec":"http://api.puppetlabs.com/razor/v1/collections/tasks/member","id":"http://localhost:8080/api/collections/tasks/noop","name":"noop"}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: get
    uri: http://localhost:8080/api
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '4982'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"commands":[{"name":"add-policy-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/add-policy-tag","id":"http://localhost:8080/api/commands/add-policy-tag"},{"name":"create-broker","rel":"http://api.puppetlabs.com/razor/v1/commands/create-broker","id":"http://localhost:8080/api/commands/create-broker"},{"name":"create-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/create-policy","id":"http://localhost:8080/api/commands/create-policy"},{"name":"create-repo","rel":"http://api.puppetlabs.com/razor/v1/commands/create-repo","id":"http://localhost:8080/api/commands/create-repo"},{"name":"create-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/create-tag","id":"http://localhost:8080/api/commands/create-tag"},{"name":"create-task","rel":"http://api.puppetlabs.com/razor/v1/commands/create-task","id":"http://localhost:8080/api/commands/create-task"},{"name":"delete-broker","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-broker","id":"http://localhost:8080/api/commands/delete-broker"},{"name":"delete-node","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-node","id":"http://localhost:8080/api/commands/delete-node"},{"name":"delete-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-policy","id":"http://localhost:8080/api/commands/delete-policy"},{"name":"delete-repo","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-repo","id":"http://localhost:8080/api/commands/delete-repo"},{"name":"delete-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-tag","id":"http://localhost:8080/api/commands/delete-tag"},{"name":"disable-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/disable-policy","id":"http://localhost:8080/api/commands/disable-policy"},{"name":"enable-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/enable-policy","id":"http://localhost:8080/api/commands/enable-policy"},{"name":"modify-node-metadata","rel":"http://api.puppetlabs.com/razor/v1/commands/modify-node-metadata","id":"http://localhost:8080/api/commands/modify-node-metadata"},{"name":"modify-policy-max-count","rel":"http://api.puppetlabs.com/razor/v1/commands/modify-policy-max-count","id":"http://localhost:8080/api/commands/modify-policy-max-count"},{"name":"move-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/move-policy","id":"http://localhost:8080/api/commands/move-policy"},{"name":"reboot-node","rel":"http://api.puppetlabs.com/razor/v1/commands/reboot-node","id":"http://localhost:8080/api/commands/reboot-node"},{"name":"register-node","rel":"http://api.puppetlabs.com/razor/v1/commands/register-node","id":"http://localhost:8080/api/commands/register-node"},{"name":"reinstall-node","rel":"http://api.puppetlabs.com/razor/v1/commands/reinstall-node","id":"http://localhost:8080/api/commands/reinstall-node"},{"name":"remove-node-metadata","rel":"http://api.puppetlabs.com/razor/v1/commands/remove-node-metadata","id":"http://localhost:8080/api/commands/remove-node-metadata"},{"name":"remove-policy-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/remove-policy-tag","id":"http://localhost:8080/api/commands/remove-policy-tag"},{"name":"set-node-desired-power-state","rel":"http://api.puppetlabs.com/razor/v1/commands/set-node-desired-power-state","id":"http://localhost:8080/api/commands/set-node-desired-power-state"},{"name":"set-node-hw-info","rel":"http://api.puppetlabs.com/razor/v1/commands/set-node-hw-info","id":"http://localhost:8080/api/commands/set-node-hw-info"},{"name":"set-node-ipmi-credentials","rel":"http://api.puppetlabs.com/razor/v1/commands/set-node-ipmi-credentials","id":"http://localhost:8080/api/commands/set-node-ipmi-credentials"},{"name":"update-node-metadata","rel":"http://api.puppetlabs.com/razor/v1/commands/update-node-metadata","id":"http://localhost:8080/api/commands/update-node-metadata"},{"name":"update-tag-rule","rel":"http://api.puppetlabs.com/razor/v1/commands/update-tag-rule","id":"http://localhost:8080/api/commands/update-tag-rule"}],"collections":[{"name":"brokers","rel":"http://api.puppetlabs.com/razor/v1/collections/brokers","id":"http://localhost:8080/api/collections/brokers"},{"name":"repos","rel":"http://api.puppetlabs.com/razor/v1/collections/repos","id":"http://localhost:8080/api/collections/repos"},{"name":"tags","rel":"http://api.puppetlabs.com/razor/v1/collections/tags","id":"http://localhost:8080/api/collections/tags"},{"name":"policies","rel":"http://api.puppetlabs.com/razor/v1/collections/policies","id":"http://localhost:8080/api/collections/policies"},{"name":"nodes","rel":"http://api.puppetlabs.com/razor/v1/collections/nodes","id":"http://localhost:8080/api/collections/nodes"},{"name":"tasks","rel":"http://api.puppetlabs.com/razor/v1/collections/tasks","id":"http://localhost:8080/api/collections/tasks"},{"name":"commands","rel":"http://api.puppetlabs.com/razor/v1/collections/commands","id":"http://localhost:8080/api/collections/commands"}],"version":{"server":"v0.14.1-125-g591a14d-dirty"}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: get
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.14.1-125-g591a14d-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '3227'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-repo","help":{"full":"# SYNOPSIS\nCreate a new repository,
        from an ISO image or a URL\n\n# DESCRIPTION\nCreate a new repository, which
        can either contain the content to install a\nnode, or simply point to an existing
        online repository by URL.\n\n\n# Access Control\n\nThis command''s access
        control pattern: `commands:create-repo:%{name}`\n\nWords surrounded by `%{...}`
        are substitutions from the input data: typically\nthe name of the object being
        modified, or some other critical detail, these\nallow roles to be granted
        partial access to modify the system.\n\nFor more detail on how the permission
        strings are structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        http://shiro.apache.org/permissions.html\n\n# Attributes\n\n * name\n   -
        The name of the repository.\n   - This attribute is required\n   - It must
        be of type string.\n   - It must be between 1 and 250 in length.\n\n * url\n   -
        The URL of the remote repository to use.\n   - It must be of type string.\n   -
        If present, iso-url must not be present.\n   - It must be between 1 and 1000
        in length.\n\n * iso-url\n   - The URL of the ISO image to download and unpack
        to create the\n   repository.  This can be an HTTP or HTTPS URL, or it can
        be a\n   file URL.\n   \n   In the later case, the file path is interpreted
        as a path on the\n   Razor server, rather than a path on the client.  This
        requires that\n   you manually place the ISO image on the server before invoking
        the\n   command.\n   - It must be of type string.\n   - If present, url must
        not be present.\n   - It must be between 1 and 1000 in length.\n\n * task\n   -
        The name of the task associated with this repository.  This is used to\n   install
        nodes that match a policy using this repository; generally it\n   should match
        the OS that the URL or ISO-URL attributes point to.\n   - This attribute is
        required\n   - It must be of type string.\n\n\n\n# EXAMPLES\n  Create a repository
        from an ISO image, which will be downloaded and unpacked\n  by the razor-server
        in the background:\n  \n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"http://example.com/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  You
        can also unpack an ISO image from a file *on the server*; this does not\n  upload
        the file from the client:\n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"file:///tmp/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  Finally,
        you can providing a `url` property when you create the repository;\n  this
        form is merely a pointer to a resource somehwere and nothing will be\n  downloaded
        onto the Razor server:\n  \n      {\n        \"name\": \"fedora19\",\n        \"url\":  \"http://mirrors.n-ix.net/fedora/linux/releases/19/Fedora/x86_64/os/\"\n        \"task\":
        \"fedora\"\n      }\n\n"},"schema":{"name":{"type":"string"},"url":{"type":"string"},"iso-url":{"type":"string"},"task":{"type":"string"}}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: get
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.14.1-125-g591a14d-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '3227'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-repo","help":{"full":"# SYNOPSIS\nCreate a new repository,
        from an ISO image or a URL\n\n# DESCRIPTION\nCreate a new repository, which
        can either contain the content to install a\nnode, or simply point to an existing
        online repository by URL.\n\n\n# Access Control\n\nThis command''s access
        control pattern: `commands:create-repo:%{name}`\n\nWords surrounded by `%{...}`
        are substitutions from the input data: typically\nthe name of the object being
        modified, or some other critical detail, these\nallow roles to be granted
        partial access to modify the system.\n\nFor more detail on how the permission
        strings are structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        http://shiro.apache.org/permissions.html\n\n# Attributes\n\n * name\n   -
        The name of the repository.\n   - This attribute is required\n   - It must
        be of type string.\n   - It must be between 1 and 250 in length.\n\n * url\n   -
        The URL of the remote repository to use.\n   - It must be of type string.\n   -
        If present, iso-url must not be present.\n   - It must be between 1 and 1000
        in length.\n\n * iso-url\n   - The URL of the ISO image to download and unpack
        to create the\n   repository.  This can be an HTTP or HTTPS URL, or it can
        be a\n   file URL.\n   \n   In the later case, the file path is interpreted
        as a path on the\n   Razor server, rather than a path on the client.  This
        requires that\n   you manually place the ISO image on the server before invoking
        the\n   command.\n   - It must be of type string.\n   - If present, url must
        not be present.\n   - It must be between 1 and 1000 in length.\n\n * task\n   -
        The name of the task associated with this repository.  This is used to\n   install
        nodes that match a policy using this repository; generally it\n   should match
        the OS that the URL or ISO-URL attributes point to.\n   - This attribute is
        required\n   - It must be of type string.\n\n\n\n# EXAMPLES\n  Create a repository
        from an ISO image, which will be downloaded and unpacked\n  by the razor-server
        in the background:\n  \n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"http://example.com/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  You
        can also unpack an ISO image from a file *on the server*; this does not\n  upload
        the file from the client:\n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"file:///tmp/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  Finally,
        you can providing a `url` property when you create the repository;\n  this
        form is merely a pointer to a resource somehwere and nothing will be\n  downloaded
        onto the Razor server:\n  \n      {\n        \"name\": \"fedora19\",\n        \"url\":  \"http://mirrors.n-ix.net/fedora/linux/releases/19/Fedora/x86_64/os/\"\n        \"task\":
        \"fedora\"\n      }\n\n"},"schema":{"name":{"type":"string"},"url":{"type":"string"},"iso-url":{"type":"string"},"task":{"type":"string"}}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: get
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.14.1-125-g591a14d-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '3227'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-repo","help":{"full":"# SYNOPSIS\nCreate a new repository,
        from an ISO image or a URL\n\n# DESCRIPTION\nCreate a new repository, which
        can either contain the content to install a\nnode, or simply point to an existing
        online repository by URL.\n\n\n# Access Control\n\nThis command''s access
        control pattern: `commands:create-repo:%{name}`\n\nWords surrounded by `%{...}`
        are substitutions from the input data: typically\nthe name of the object being
        modified, or some other critical detail, these\nallow roles to be granted
        partial access to modify the system.\n\nFor more detail on how the permission
        strings are structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        http://shiro.apache.org/permissions.html\n\n# Attributes\n\n * name\n   -
        The name of the repository.\n   - This attribute is required\n   - It must
        be of type string.\n   - It must be between 1 and 250 in length.\n\n * url\n   -
        The URL of the remote repository to use.\n   - It must be of type string.\n   -
        If present, iso-url must not be present.\n   - It must be between 1 and 1000
        in length.\n\n * iso-url\n   - The URL of the ISO image to download and unpack
        to create the\n   repository.  This can be an HTTP or HTTPS URL, or it can
        be a\n   file URL.\n   \n   In the later case, the file path is interpreted
        as a path on the\n   Razor server, rather than a path on the client.  This
        requires that\n   you manually place the ISO image on the server before invoking
        the\n   command.\n   - It must be of type string.\n   - If present, url must
        not be present.\n   - It must be between 1 and 1000 in length.\n\n * task\n   -
        The name of the task associated with this repository.  This is used to\n   install
        nodes that match a policy using this repository; generally it\n   should match
        the OS that the URL or ISO-URL attributes point to.\n   - This attribute is
        required\n   - It must be of type string.\n\n\n\n# EXAMPLES\n  Create a repository
        from an ISO image, which will be downloaded and unpacked\n  by the razor-server
        in the background:\n  \n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"http://example.com/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  You
        can also unpack an ISO image from a file *on the server*; this does not\n  upload
        the file from the client:\n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"file:///tmp/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  Finally,
        you can providing a `url` property when you create the repository;\n  this
        form is merely a pointer to a resource somehwere and nothing will be\n  downloaded
        onto the Razor server:\n  \n      {\n        \"name\": \"fedora19\",\n        \"url\":  \"http://mirrors.n-ix.net/fedora/linux/releases/19/Fedora/x86_64/os/\"\n        \"task\":
        \"fedora\"\n      }\n\n"},"schema":{"name":{"type":"string"},"url":{"type":"string"},"iso-url":{"type":"string"},"task":{"type":"string"}}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: post
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: UTF-8
      string: '{"name":"double-quote with spaces\"","url":"http://url.com/some.iso","task":"noop"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Content-Type:
      - application/json
      Content-Length:
      - '83'
      User-Agent:
      - Ruby
  response:
    status:
      code: 202
      message: Accepted
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '250'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"spec":"http://api.puppetlabs.com/razor/v1/collections/repos/member","id":"http://localhost:8080/api/collections/repos/double-quote%20with%20spaces%22","name":"double-quote
        with spaces\"","command":"http://localhost:8080/api/collections/commands/2"}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: get
    uri: http://localhost:8080/api/collections/repos/double-quote%20with%20spaces%22
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '384'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"spec":"http://api.puppetlabs.com/razor/v1/collections/repos/member","id":"http://localhost:8080/api/collections/repos/double-quote%20with%20spaces%22","name":"double-quote
        with spaces\"","iso_url":null,"url":"http://url.com/some.iso","task":{"spec":"http://api.puppetlabs.com/razor/v1/collections/tasks/member","id":"http://localhost:8080/api/collections/tasks/noop","name":"noop"}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:46 GMT
- request:
    method: get
    uri: http://localhost:8080/api
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '4982'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"commands":[{"name":"add-policy-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/add-policy-tag","id":"http://localhost:8080/api/commands/add-policy-tag"},{"name":"create-broker","rel":"http://api.puppetlabs.com/razor/v1/commands/create-broker","id":"http://localhost:8080/api/commands/create-broker"},{"name":"create-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/create-policy","id":"http://localhost:8080/api/commands/create-policy"},{"name":"create-repo","rel":"http://api.puppetlabs.com/razor/v1/commands/create-repo","id":"http://localhost:8080/api/commands/create-repo"},{"name":"create-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/create-tag","id":"http://localhost:8080/api/commands/create-tag"},{"name":"create-task","rel":"http://api.puppetlabs.com/razor/v1/commands/create-task","id":"http://localhost:8080/api/commands/create-task"},{"name":"delete-broker","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-broker","id":"http://localhost:8080/api/commands/delete-broker"},{"name":"delete-node","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-node","id":"http://localhost:8080/api/commands/delete-node"},{"name":"delete-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-policy","id":"http://localhost:8080/api/commands/delete-policy"},{"name":"delete-repo","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-repo","id":"http://localhost:8080/api/commands/delete-repo"},{"name":"delete-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/delete-tag","id":"http://localhost:8080/api/commands/delete-tag"},{"name":"disable-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/disable-policy","id":"http://localhost:8080/api/commands/disable-policy"},{"name":"enable-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/enable-policy","id":"http://localhost:8080/api/commands/enable-policy"},{"name":"modify-node-metadata","rel":"http://api.puppetlabs.com/razor/v1/commands/modify-node-metadata","id":"http://localhost:8080/api/commands/modify-node-metadata"},{"name":"modify-policy-max-count","rel":"http://api.puppetlabs.com/razor/v1/commands/modify-policy-max-count","id":"http://localhost:8080/api/commands/modify-policy-max-count"},{"name":"move-policy","rel":"http://api.puppetlabs.com/razor/v1/commands/move-policy","id":"http://localhost:8080/api/commands/move-policy"},{"name":"reboot-node","rel":"http://api.puppetlabs.com/razor/v1/commands/reboot-node","id":"http://localhost:8080/api/commands/reboot-node"},{"name":"register-node","rel":"http://api.puppetlabs.com/razor/v1/commands/register-node","id":"http://localhost:8080/api/commands/register-node"},{"name":"reinstall-node","rel":"http://api.puppetlabs.com/razor/v1/commands/reinstall-node","id":"http://localhost:8080/api/commands/reinstall-node"},{"name":"remove-node-metadata","rel":"http://api.puppetlabs.com/razor/v1/commands/remove-node-metadata","id":"http://localhost:8080/api/commands/remove-node-metadata"},{"name":"remove-policy-tag","rel":"http://api.puppetlabs.com/razor/v1/commands/remove-policy-tag","id":"http://localhost:8080/api/commands/remove-policy-tag"},{"name":"set-node-desired-power-state","rel":"http://api.puppetlabs.com/razor/v1/commands/set-node-desired-power-state","id":"http://localhost:8080/api/commands/set-node-desired-power-state"},{"name":"set-node-hw-info","rel":"http://api.puppetlabs.com/razor/v1/commands/set-node-hw-info","id":"http://localhost:8080/api/commands/set-node-hw-info"},{"name":"set-node-ipmi-credentials","rel":"http://api.puppetlabs.com/razor/v1/commands/set-node-ipmi-credentials","id":"http://localhost:8080/api/commands/set-node-ipmi-credentials"},{"name":"update-node-metadata","rel":"http://api.puppetlabs.com/razor/v1/commands/update-node-metadata","id":"http://localhost:8080/api/commands/update-node-metadata"},{"name":"update-tag-rule","rel":"http://api.puppetlabs.com/razor/v1/commands/update-tag-rule","id":"http://localhost:8080/api/commands/update-tag-rule"}],"collections":[{"name":"brokers","rel":"http://api.puppetlabs.com/razor/v1/collections/brokers","id":"http://localhost:8080/api/collections/brokers"},{"name":"repos","rel":"http://api.puppetlabs.com/razor/v1/collections/repos","id":"http://localhost:8080/api/collections/repos"},{"name":"tags","rel":"http://api.puppetlabs.com/razor/v1/collections/tags","id":"http://localhost:8080/api/collections/tags"},{"name":"policies","rel":"http://api.puppetlabs.com/razor/v1/collections/policies","id":"http://localhost:8080/api/collections/policies"},{"name":"nodes","rel":"http://api.puppetlabs.com/razor/v1/collections/nodes","id":"http://localhost:8080/api/collections/nodes"},{"name":"tasks","rel":"http://api.puppetlabs.com/razor/v1/collections/tasks","id":"http://localhost:8080/api/collections/tasks"},{"name":"commands","rel":"http://api.puppetlabs.com/razor/v1/collections/commands","id":"http://localhost:8080/api/collections/commands"}],"version":{"server":"v0.14.1-125-g591a14d-dirty"}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:47 GMT
- request:
    method: get
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.14.1-125-g591a14d-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '3227'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-repo","help":{"full":"# SYNOPSIS\nCreate a new repository,
        from an ISO image or a URL\n\n# DESCRIPTION\nCreate a new repository, which
        can either contain the content to install a\nnode, or simply point to an existing
        online repository by URL.\n\n\n# Access Control\n\nThis command''s access
        control pattern: `commands:create-repo:%{name}`\n\nWords surrounded by `%{...}`
        are substitutions from the input data: typically\nthe name of the object being
        modified, or some other critical detail, these\nallow roles to be granted
        partial access to modify the system.\n\nFor more detail on how the permission
        strings are structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        http://shiro.apache.org/permissions.html\n\n# Attributes\n\n * name\n   -
        The name of the repository.\n   - This attribute is required\n   - It must
        be of type string.\n   - It must be between 1 and 250 in length.\n\n * url\n   -
        The URL of the remote repository to use.\n   - It must be of type string.\n   -
        If present, iso-url must not be present.\n   - It must be between 1 and 1000
        in length.\n\n * iso-url\n   - The URL of the ISO image to download and unpack
        to create the\n   repository.  This can be an HTTP or HTTPS URL, or it can
        be a\n   file URL.\n   \n   In the later case, the file path is interpreted
        as a path on the\n   Razor server, rather than a path on the client.  This
        requires that\n   you manually place the ISO image on the server before invoking
        the\n   command.\n   - It must be of type string.\n   - If present, url must
        not be present.\n   - It must be between 1 and 1000 in length.\n\n * task\n   -
        The name of the task associated with this repository.  This is used to\n   install
        nodes that match a policy using this repository; generally it\n   should match
        the OS that the URL or ISO-URL attributes point to.\n   - This attribute is
        required\n   - It must be of type string.\n\n\n\n# EXAMPLES\n  Create a repository
        from an ISO image, which will be downloaded and unpacked\n  by the razor-server
        in the background:\n  \n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"http://example.com/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  You
        can also unpack an ISO image from a file *on the server*; this does not\n  upload
        the file from the client:\n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"file:///tmp/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  Finally,
        you can providing a `url` property when you create the repository;\n  this
        form is merely a pointer to a resource somehwere and nothing will be\n  downloaded
        onto the Razor server:\n  \n      {\n        \"name\": \"fedora19\",\n        \"url\":  \"http://mirrors.n-ix.net/fedora/linux/releases/19/Fedora/x86_64/os/\"\n        \"task\":
        \"fedora\"\n      }\n\n"},"schema":{"name":{"type":"string"},"url":{"type":"string"},"iso-url":{"type":"string"},"task":{"type":"string"}}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:47 GMT
- request:
    method: get
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.14.1-125-g591a14d-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '3227'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-repo","help":{"full":"# SYNOPSIS\nCreate a new repository,
        from an ISO image or a URL\n\n# DESCRIPTION\nCreate a new repository, which
        can either contain the content to install a\nnode, or simply point to an existing
        online repository by URL.\n\n\n# Access Control\n\nThis command''s access
        control pattern: `commands:create-repo:%{name}`\n\nWords surrounded by `%{...}`
        are substitutions from the input data: typically\nthe name of the object being
        modified, or some other critical detail, these\nallow roles to be granted
        partial access to modify the system.\n\nFor more detail on how the permission
        strings are structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        http://shiro.apache.org/permissions.html\n\n# Attributes\n\n * name\n   -
        The name of the repository.\n   - This attribute is required\n   - It must
        be of type string.\n   - It must be between 1 and 250 in length.\n\n * url\n   -
        The URL of the remote repository to use.\n   - It must be of type string.\n   -
        If present, iso-url must not be present.\n   - It must be between 1 and 1000
        in length.\n\n * iso-url\n   - The URL of the ISO image to download and unpack
        to create the\n   repository.  This can be an HTTP or HTTPS URL, or it can
        be a\n   file URL.\n   \n   In the later case, the file path is interpreted
        as a path on the\n   Razor server, rather than a path on the client.  This
        requires that\n   you manually place the ISO image on the server before invoking
        the\n   command.\n   - It must be of type string.\n   - If present, url must
        not be present.\n   - It must be between 1 and 1000 in length.\n\n * task\n   -
        The name of the task associated with this repository.  This is used to\n   install
        nodes that match a policy using this repository; generally it\n   should match
        the OS that the URL or ISO-URL attributes point to.\n   - This attribute is
        required\n   - It must be of type string.\n\n\n\n# EXAMPLES\n  Create a repository
        from an ISO image, which will be downloaded and unpacked\n  by the razor-server
        in the background:\n  \n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"http://example.com/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  You
        can also unpack an ISO image from a file *on the server*; this does not\n  upload
        the file from the client:\n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"file:///tmp/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  Finally,
        you can providing a `url` property when you create the repository;\n  this
        form is merely a pointer to a resource somehwere and nothing will be\n  downloaded
        onto the Razor server:\n  \n      {\n        \"name\": \"fedora19\",\n        \"url\":  \"http://mirrors.n-ix.net/fedora/linux/releases/19/Fedora/x86_64/os/\"\n        \"task\":
        \"fedora\"\n      }\n\n"},"schema":{"name":{"type":"string"},"url":{"type":"string"},"iso-url":{"type":"string"},"task":{"type":"string"}}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:47 GMT
- request:
    method: get
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.14.1-125-g591a14d-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '3227'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-repo","help":{"full":"# SYNOPSIS\nCreate a new repository,
        from an ISO image or a URL\n\n# DESCRIPTION\nCreate a new repository, which
        can either contain the content to install a\nnode, or simply point to an existing
        online repository by URL.\n\n\n# Access Control\n\nThis command''s access
        control pattern: `commands:create-repo:%{name}`\n\nWords surrounded by `%{...}`
        are substitutions from the input data: typically\nthe name of the object being
        modified, or some other critical detail, these\nallow roles to be granted
        partial access to modify the system.\n\nFor more detail on how the permission
        strings are structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        http://shiro.apache.org/permissions.html\n\n# Attributes\n\n * name\n   -
        The name of the repository.\n   - This attribute is required\n   - It must
        be of type string.\n   - It must be between 1 and 250 in length.\n\n * url\n   -
        The URL of the remote repository to use.\n   - It must be of type string.\n   -
        If present, iso-url must not be present.\n   - It must be between 1 and 1000
        in length.\n\n * iso-url\n   - The URL of the ISO image to download and unpack
        to create the\n   repository.  This can be an HTTP or HTTPS URL, or it can
        be a\n   file URL.\n   \n   In the later case, the file path is interpreted
        as a path on the\n   Razor server, rather than a path on the client.  This
        requires that\n   you manually place the ISO image on the server before invoking
        the\n   command.\n   - It must be of type string.\n   - If present, url must
        not be present.\n   - It must be between 1 and 1000 in length.\n\n * task\n   -
        The name of the task associated with this repository.  This is used to\n   install
        nodes that match a policy using this repository; generally it\n   should match
        the OS that the URL or ISO-URL attributes point to.\n   - This attribute is
        required\n   - It must be of type string.\n\n\n\n# EXAMPLES\n  Create a repository
        from an ISO image, which will be downloaded and unpacked\n  by the razor-server
        in the background:\n  \n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"http://example.com/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  You
        can also unpack an ISO image from a file *on the server*; this does not\n  upload
        the file from the client:\n      {\n        \"name\":    \"fedora19\",\n        \"iso-url\":
        \"file:///tmp/Fedora-19-x86_64-DVD.iso\"\n        \"task\":    \"fedora\"\n      }\n  \n  Finally,
        you can providing a `url` property when you create the repository;\n  this
        form is merely a pointer to a resource somehwere and nothing will be\n  downloaded
        onto the Razor server:\n  \n      {\n        \"name\": \"fedora19\",\n        \"url\":  \"http://mirrors.n-ix.net/fedora/linux/releases/19/Fedora/x86_64/os/\"\n        \"task\":
        \"fedora\"\n      }\n\n"},"schema":{"name":{"type":"string"},"url":{"type":"string"},"iso-url":{"type":"string"},"task":{"type":"string"}}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:47 GMT
- request:
    method: post
    uri: http://localhost:8080/api/commands/create-repo
    body:
      encoding: UTF-8
      string: '{"name":"single-quote with spaces''","url":"http://url.com/some.iso","task":"noop"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Content-Type:
      - application/json
      Content-Length:
      - '82'
      User-Agent:
      - Ruby
  response:
    status:
      code: 202
      message: Accepted
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '247'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"spec":"http://api.puppetlabs.com/razor/v1/collections/repos/member","id":"http://localhost:8080/api/collections/repos/single-quote%20with%20spaces''","name":"single-quote
        with spaces''","command":"http://localhost:8080/api/collections/commands/3"}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:47 GMT
- request:
    method: get
    uri: http://localhost:8080/api/collections/repos/single-quote%20with%20spaces'
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '381'
      Date:
      - Wed, 21 May 2014 21:40:46 GMT
    body:
      encoding: US-ASCII
      string: '{"spec":"http://api.puppetlabs.com/razor/v1/collections/repos/member","id":"http://localhost:8080/api/collections/repos/single-quote%20with%20spaces''","name":"single-quote
        with spaces''","iso_url":null,"url":"http://url.com/some.iso","task":{"spec":"http://api.puppetlabs.com/razor/v1/collections/tasks/member","id":"http://localhost:8080/api/collections/tasks/noop","name":"noop"}}'
    http_version:
  recorded_at: Wed, 21 May 2014 21:40:47 GMT
recorded_with: VCR 2.5.0
