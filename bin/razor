#!/usr/bin/env ruby

# Needed to make the client work on Ruby 1.8.7
unless Kernel.respond_to?(:require_relative)
  module Kernel
    def require_relative(path)
      require File.join(File.dirname(caller[0]), path.to_str)
    end
  end
end

require 'rubygems'
require_relative "../lib/razor/cli"

include Razor::CLI::Format

def die(message = nil)
  puts "Error: #{message}" if message
  exit 1
end

begin
  parse = Razor::CLI::Parse.new(ARGV)
rescue Razor::CLI::InvalidURIError => e
  die e.message
rescue OptionParser::InvalidOption => e
  die e.message + "\nTry 'razor --help' for more information"
end

if parse.show_help?
  puts parse.help
  exit 0
end

begin
  document = parse.navigate.get_document
  url = parse.navigate.last_url
  puts "From #{url}:\n\n#{format_document document}\n\n"
rescue SocketError, Errno::ECONNREFUSED => e
  puts "Error: Could not connect to the server at #{parse.api_url}"
  puts "       #{e}\n"
  die
rescue RestClient::Exception => e
  r = e.response
  puts "Error from doing #{r.args[:method].to_s.upcase} #{r.args[:url]}"
  puts e.message
  begin
    body = MultiJson::load(r.body)
    puts body.delete("details") if body["details"]
    unless body.empty?
      puts format_document(body)
    end
  rescue => e
    # Ignore errors here; our best efforts at telling the user more about
    # what happened has failed. Just dump the response
    puts r.body
  end
  die
rescue StandardError => e
  die "#{e.message}\nTry 'razor --help' for more information\n\n"
end
